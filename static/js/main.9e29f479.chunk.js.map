{"version":3,"sources":["img/logo-white.png","redux/selectors.js","redux/actions.js","redux/subscriptions.js","redux/interactions.js","getWeb3.js","Account.js","Login.js","App.js","redux/reducers.js","redux/configure.js","serviceWorker.js","index.js"],"names":["module","exports","loggingInSelector","createSelector","state","get","w","loggingInErrorSelector","accountSelector","balanceSelector","topupOpenSelector","topupErrorSelector","topupSuccessSelector","topupResponseSelector","loggedIn","web3","type","accountLoaded","account","balanceLoaded","balance","coinGeckoLoaded","coinGecko","rampSuccess","response","rampClosed","rampFailed","subscribeToRampEvents","dispatch","ramp","on","event","topupClose","console","log","topupSuccess","topupFail","subscribeToAccountsChanging","a","currentProvider","accounts","loadAccount","CoinGecko","require","loadWeb3","Promise","resolve","reject","window","ethereum","Web3","enable","Error","error","eth","getAccounts","loadBalance","getBalance","loadCoinGecko","topupWallet","RampInstantSDK","hostAppName","hostLogoUrl","variant","userAddress","show","Account","this","props","Container","Row","Col","className","id","Button","onClick","Component","connect","topupOpen","topupError","topupResponse","Login","loggingIn","loggingInError","login","e","preventDefault","Alert","message","App","loadedBalance","appClassName","Navbar","fixed","Brand","Image","src","logo","width","height","alt","href","url","network","rootReducer","combineReducers","app","action","loadingFiatBalance","fiatBalance","display","currency","currencySymbol","symbol","topup","active","success","loggerMiddleware","createLogger","middleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","preLoadedState","Boolean","location","hostname","match","ReactDOM","render","store","createStore","applyMiddleware","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,wC,8mBCY9BC,GAPoBC,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,gBAAiB,SACI,SAAAE,GAAC,OAAIA,KAGpCH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,WAAY,SACI,SAAAE,GAAC,OAAIA,KAIrBH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,qBAAqB,MACA,SAAAE,GAAC,OAAIA,MAGnDC,EAAyBJ,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,iBAAiB,MACS,SAAAE,GAAC,OAAIA,KAM7DE,GAHeL,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,eAAgB,SACA,SAAAE,GAAC,OAAIA,KAGvBH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,kBAAmB,OACA,SAAAE,GAAC,OAAIA,MAG/CG,EAAkBN,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,kBAAmB,SACA,SAAAE,GAAC,OAAIA,KAoB/CI,GAjB6BP,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,8BAA8B,MACA,SAAAE,GAAC,OAAIA,KAG/CH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,sBAAuB,SACA,SAAAE,GAAC,OAAIA,KAIzCH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,cAAe,SACA,SAAAE,GAAC,OAAIA,KAGpBH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,mBAAoB,UACA,SAAAE,GAAC,OAAIA,KAGxBH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,yBAA0B,WACA,SAAAE,GAAC,OAAIA,KAIzCH,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,gBAAgB,MACK,SAAAE,GAAC,OAAIA,MAGnDK,EAAqBR,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,eAAe,MACO,SAAAE,GAAC,OAAIA,KAGrDM,EAAuBT,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,iBAAiB,MACO,SAAAE,GAAC,OAAIA,KAGzDO,EAAwBV,aADf,SAAAC,GAAK,OAAIC,cAAID,EAAO,iBAAkB,SACO,SAAAE,GAAC,OAAIA,K,4DC/CjE,SAASQ,EAASC,GACrB,MAAO,CACHC,KAAM,YACND,QAWD,SAASE,EAAcC,GAC1B,MAAO,CACHF,KAAM,iBACNE,WAID,SAASC,EAAcC,GAC1B,MAAO,CACHJ,KAAM,iBACNI,WAWD,SAASC,EAAgBC,GAC5B,MAAO,CACHN,KAAM,mBACNM,aA+BD,SAASC,EAAYC,GACxB,MAAO,CACHR,KAAM,eACNQ,YAID,SAASC,EAAWD,GACvB,MAAO,CACHR,KAAM,cACNQ,YAID,SAASE,EAAWF,GACvB,MAAO,CACHR,KAAM,cACNQ,Y,aC1FKG,EAAwB,SAACC,EAAUC,GAC5CA,EAAKC,GAAG,kCAAkC,SAACC,GACvCC,EAAWJ,EAAUG,MAGzBF,EAAKC,GAAG,oBAAoB,SAACC,GACzBE,QAAQC,IAAI,mBAAoBH,MAIpCF,EAAKC,GAAG,uBAAuB,SAACC,GAC5BI,EAAaP,EAAUG,MAG3BF,EAAKC,GAAG,mBAAmB,SAACC,GACxBK,EAAUR,EAAUG,OAIfM,EAA2B,uCAAG,WAAOT,EAAUb,GAAjB,SAAAuB,EAAA,sDACvCvB,EAAKwB,gBAAgBT,GAAG,mBAAmB,SAAUU,GACjDC,EAAYb,EAAUb,MAFa,2CAAH,wD,kBCflC2B,EAAYC,EAAQ,KAEbC,EAAQ,uCAAG,WAAOhB,GAAP,eAAAU,EAAA,6DACpBV,EFRO,CACHZ,KAAM,eEQND,EAAO,KAFS,kBCLvB,IAAI8B,QAAJ,uCAAa,WAAOC,EAASC,GAAhB,iBAAAT,EAAA,0DAERU,OAAOC,SAFC,wBAGLlC,EAAO,IAAImC,IAAKF,OAAOC,UAHlB,kBAMJD,OAAOC,SAASE,SANZ,OAQVL,EAAQ/B,GARE,gDAUVgC,EAAO,EAAD,IAVI,gCAcHC,OAAOjC,MAETA,EAAOiC,OAAOjC,KACpB+B,EAAQ/B,IAIRgC,EAAO,IAAIK,MAAM,6BArBN,yDAAb,yDDKuB,OAIhBrC,EAJgB,OAKhBa,EAASd,EAASC,IAClB0B,EAAYb,EAAUb,GANN,kDAShBa,EFHG,CACHZ,KAAM,eACNqC,MECqB,EAAD,KATJ,iCAWbtC,GAXa,0DAAH,sDAcR0B,EAAW,uCAAG,WAAOb,EAAUb,GAAjB,iBAAAuB,EAAA,sEACAvB,EAAKuC,IAAIC,cADT,cACjBf,EADiB,OAEjBtB,EAAUsB,EAAS,GACzBZ,EAASX,EAAcC,IACvBmB,EAA4BT,EAAUb,GACtCyC,EAAY5B,EAAUb,EAAMG,GALL,kBAMhBA,GANgB,2CAAH,wDASXsC,EAAW,uCAAG,WAAO5B,EAAUb,EAAMG,GAAvB,eAAAoB,EAAA,sEACDvB,EAAKuC,IAAIG,WAAWvC,GADnB,cACjBE,EADiB,OAEvBQ,EAAST,EAAcC,IACvBsC,EAAc9B,GAHS,kBAIhBR,GAJgB,2CAAH,0DAOXsC,EAAa,uCAAG,WAAO9B,GAAP,eAAAU,EAAA,6DACnBhB,EAAY,IAAIoB,EACtBd,EAASP,EAAgBC,IAFA,kBAGlBA,GAHkB,2CAAH,sDAsBbqC,EAAW,uCAAG,WAAO/B,EAAUV,GAAjB,eAAAoB,EAAA,sDACjBT,EAAO,IAAI+B,IAAe,CAC5BC,YAAa,aACbC,YAAa,6EACbC,QAAS,OACTC,YAAa9C,IAEhB+C,OACDrC,EFEO,CACHZ,KAAM,gBEFVW,EAAsBC,EAAUC,GATT,2CAAH,wDAYXM,EAAY,uCAAG,WAAOP,EAAUJ,GAAjB,SAAAc,EAAA,sDACxBL,QAAQC,IAAI,gBAAiBV,GAC7BI,EAASL,EAAYC,IAFG,2CAAH,wDAKZQ,EAAU,uCAAG,WAAOJ,EAAUJ,GAAjB,SAAAc,EAAA,sDACtBL,QAAQC,IAAI,eAAgBV,GAC5BI,EAASH,EAAWD,IAFE,2CAAH,wDAKVY,EAAS,uCAAG,WAAOR,EAAUJ,GAAjB,SAAAc,EAAA,sDACrBL,QAAQC,IAAI,aAAcV,GAC1BI,EAASF,EAAWF,IAFC,2CAAH,wD,iBE1EhB0C,E,uKAEQ,IAAD,EACuBC,KAAKC,MAA1BxC,EADF,EACEA,SAAUV,EADZ,EACYA,QAMjB,OACI,kBAAC,IAAD,KACI,kBAACmD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,eACX,2BACI,0BAAMC,GAAG,kBAAkBD,UAAU,6CAA6CtD,IAEtF,kBAACwD,EAAA,EAAD,CAAQC,QAZd,WACVhB,EAAY/B,EAAUV,KAWN,iB,GAjBN0D,aAuCPC,mBAVf,SAAyBzE,GACxB,MAAO,CACAc,QAASV,EAAgBJ,GACzB0E,UAAWpE,EAAkBN,GAC7B2E,WAAYpE,EAAmBP,GAC/B+B,aAAcvB,EAAqBR,GACnC4E,cAAenE,EAAsBT,MAI9ByE,CAAyBX,G,UCxClCe,G,uKAEQ,IAAD,EAEyCd,KAAKC,MAA5CxC,EAFF,EAEEA,SAAUsD,EAFZ,EAEYA,UAAWC,EAFvB,EAEuBA,eAEtBC,EAAK,uCAAG,WAAOC,GAAP,SAAA/C,EAAA,6DACZ+C,EAAEC,iBADU,SAEN1C,EAAShB,GAFH,2CAAH,sDAKX,OAEI,kBAAC,IAAD,KACI,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,eACX,kBAACE,EAAA,EAAD,CAAQC,QAASS,GAAjB,YAGoB,IAAnBD,IAA0C,IAAdD,EAAsB,kBAAC,IAAD,KAAQ,kBAACK,GAAA,EAAD,CAAOf,UAAU,OAAOT,QAAQ,UAAhC,8BAAqEoB,EAAeK,UAA4B,6C,GApBnLZ,aAoCLC,oBAPf,SAAyBzE,GACxB,MAAO,CACA+E,eAAgB5E,EAAuBH,GACvC8E,UAAWhF,EAAkBE,MAItByE,CAAyBI,I,kDChClCQ,G,uKAEK,IAEFC,EAAiBvB,KAAKC,MAAtBsB,cAEHC,EAAe,YAKnB,OAJsB,OAAlBD,IACHC,GAAgB,cAIjB,yBAAKnB,UAAWmB,GACf,kBAACC,GAAA,EAAD,CAAQC,MAAM,OACb,kBAAC,IAAD,KACC,kBAACD,GAAA,EAAOE,MAAR,KACC,kBAACC,GAAA,EAAD,CACCC,IAAKC,KACLC,MAAM,KACNC,OAAO,KACP3B,UAAU,2BACV4B,IAAI,SAEJ,IACD,+CAIgB,MAAjBV,EAAwB,kBAAC,EAAD,MAAc,kBAAC,GAAD,MACxC,gCACC,kBAACrB,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,UAAU,yBACd,kBAAC,IAAD,KACC,8BAAM,uBAAG6B,KAAK,0BAAR,iBAIT,kBAAC,IAAD,KACC,kBAAC/B,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAKC,UAAU,oBACd,kBAAC,cAAD,CAAYA,UAAU,OAAO8B,IAAI,iCACjC,kBAAC,cAAD,CAAY9B,UAAU,OAAO8B,IAAI,gCACjC,kBAAC,cAAD,CAAY9B,UAAU,OAAO8B,IAAI,iCACjC,kBAAC,cAAD,CAAY9B,UAAU,OAAO+B,QAAQ,QAAQD,IAAI,2C,GA5CvC1B,aA6DHC,oBANf,SAAyBzE,GACxB,MAAO,CACNsF,cAAejF,EAAgBL,MAIlByE,CAAyBY,I,2BCZxC,IAIee,GAJK,IAAIC,KAAgB,CACpCC,IA3DJ,WAAkC,IAArBtG,EAAoB,uDAAZ,GAAIuG,EAAQ,uCAC7B,OAAQA,EAAO3F,MACX,IAAK,mBACD,OAAO,6BAAKZ,GAAZ,IAAmBkB,UAAWqF,EAAOrF,YACzC,IAAK,cACD,OAAO,6BAAKlB,GAAZ,IAAmByB,KAAM8E,EAAO9E,OACpC,QACI,OAAOzB,IAoDVc,QA/BT,WAAsC,IAArBd,EAAoB,uDAAZ,GAAIuG,EAAQ,uCACjC,OAAQA,EAAO3F,MACX,IAAK,aACD,OAAO,6BAAKZ,GAAZ,IAAmB8E,WAAW,EAAM7B,OAAO,IAC/C,IAAK,YACD,OAAO,6BAAKjD,GAAZ,IAAmB8E,WAAW,EAAOnE,KAAM4F,EAAO5F,OACtD,IAAK,eACD,OAAO,6BAAKX,GAAZ,IAAmB8E,WAAW,EAAO7B,MAAOsD,EAAOtD,QACvD,IAAK,iBACD,OAAO,6BAAKjD,GAAZ,IAAmBc,QAASyF,EAAOzF,UACvC,IAAK,iBACD,OAAO,6BAAKd,GAAZ,IAAmBgB,QAASuF,EAAOvF,UACvC,IAAK,uBACD,OAAO,6BAAKhB,GAAZ,IAAmBwG,oBAAoB,IAC3C,IAAK,mBACD,OAAO,6BAAKxG,GAAZ,IAAmBwG,oBAAoB,EAAOC,YAAaF,EAAOvF,UACtE,QACI,OAAOhB,IAcD0G,QAVlB,WAAsC,IAArB1G,EAAoB,uDAAZ,GAAIuG,EAAQ,uCACjC,OAAQA,EAAO3F,MACX,IAAK,kBACD,OAAO,6BAAKZ,GAAZ,IAAmB2G,SAAUJ,EAAOI,SAAUC,eAAgBL,EAAOM,SACzE,QACI,OAAO7G,IAKQ8G,MAhD3B,WAAoC,IAArB9G,EAAoB,uDAAZ,GAAIuG,EAAQ,uCAC/B,OAAQA,EAAO3F,MACX,IAAK,cACD,OAAO,6BAAKZ,GAAZ,IAAmB+G,QAAQ,IAC/B,IAAK,cACD,OAAO,6BAAK/G,GAAZ,IAAmB+G,QAAQ,EAAO9D,OAAO,EAAM7B,SAAUmF,EAAOnF,WACpE,IAAK,cACD,OAAO,6BAAKpB,GAAZ,IAAmB+G,QAAQ,EAAO3F,SAAUmF,EAAOnF,WACvD,IAAK,eACD,OAAO,6BAAKpB,GAAZ,IAAmB+G,QAAQ,EAAOC,SAAS,EAAM5F,SAAUmF,EAAOnF,WACtE,IAAK,aACD,OAAO,6BAAKpB,GAAZ,IAAmB+G,QAAQ,EAAO9D,OAAO,EAAO+D,SAAS,EAAO5F,SAAU,OAC9E,QACI,OAAOpB,MCtBbiH,GAAmBC,0BACnBC,GAAa,GAGbC,GAAmBxE,OAAOyE,sCAAwCC,KCIxE,IDFuCC,GCEnBC,QACW,cAA7B5E,OAAO6E,SAASC,UAEe,UAA7B9E,OAAO6E,SAASC,UAEhB9E,OAAO6E,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACL,kBAAC,IAAD,CAAUC,MFGHC,aACH3B,GACAmB,GACAH,GAAiBY,KAAe,WAAf,EAAmBb,GAAnB,QAA+BF,SELhD,kBAAC,GAAD,OAEJgB,SAASC,eAAe,SDwHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxF,GACLpB,QAAQoB,MAAMA,EAAMmC,c","file":"static/js/main.9e29f479.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.86143c9b.png\";","import {get} from 'lodash';\nimport {createSelector} from 'reselect';\n\n//APP\nconst coinGecko = state => get(state, 'app.coinGecko', null);\nexport const coinGeckoSelector = createSelector(coinGecko, w => w);\n\nconst ramp = state => get(state, 'app.ramp', null);\nexport const rampSelector = createSelector(ramp, w => w);\n\n//ACCOUNT\nconst loggingIn = state => get(state, 'account.loggingIn', false);\nexport const loggingInSelector = createSelector(loggingIn, w => w);\n\nconst loggingInError = state => get(state, 'account.error', false);\nexport const loggingInErrorSelector = createSelector(loggingInError, w => w);\n\nconst web3 = state => get(state, 'account.web3', null);\nexport const web3Selector = createSelector(web3, w => w);\n\nconst account = state => get(state, 'account.account', \"\");\nexport const accountSelector = createSelector(account, w => w);\n\nconst balance = state => get(state, 'account.balance', null);\nexport const balanceSelector = createSelector(balance, w => w);\n\nconst loadingFiatBalance = state => get(state, 'account.loadingFiatBalance', false);\nexport const loadingFiatBalanceSelector = createSelector(loadingFiatBalance, w => w);\n\nconst fiatBalance = state => get(state, 'account.fiatBalance', null);\nexport const fiatBalanceSelector = createSelector(fiatBalance, w => w);\n\n//DISPLAY\nconst tab = state => get(state, 'display.tab', null);\nexport const tabSelector = createSelector(tab, w => w);\n\nconst currency = state => get(state, 'display.currency', 'gbp');\nexport const currencySelector = createSelector(currency, w => w);\n\nconst currencySymbol = state => get(state, 'display.currencySymbol', \"£\");\nexport const currencySymbolSelector = createSelector(currencySymbol, w => w);\n\n//TOPUP\nconst topupOpen = state => get(state, 'topup.active', false);\nexport const topupOpenSelector = createSelector(topupOpen, w => w);\n\nconst topupError = state => get(state, 'topup.error', false);\nexport const topupErrorSelector = createSelector(topupError, w => w);\n\nconst topupSuccess = state => get(state, 'topup.success', false);\nexport const topupSuccessSelector = createSelector(topupSuccess, w => w);\n\nconst topupResponse = state => get(state, 'topup.response', null);\nexport const topupResponseSelector = createSelector(topupResponse, w => w);","export function loggingIn(){\n    return {\n        type: 'LOGGING_IN'\n    }\n}\n\nexport function loggedIn(web3){\n    return {\n        type: 'LOGGED_IN',\n        web3\n    }\n}\n\nexport function loginFailed(error){\n    return {\n        type: 'LOGIN_FAILED',\n        error\n    }\n}\n\nexport function accountLoaded(account){\n    return {\n        type: 'ACCOUNT_LOADED',\n        account\n    }\n}\n\nexport function balanceLoaded(balance){\n    return {\n        type: 'BALANCE_LOADED',\n        balance\n    }\n}\n\nexport function rampLoaded(ramp){\n    return {\n        type: 'RAMP_LOADED',\n        ramp\n    }\n}\n\nexport function coinGeckoLoaded(coinGecko){\n    return {\n        type: 'COINGECKO_LOADED',\n        coinGecko\n    }\n}\n\nexport function currencyChosen(currency, symbol){\n    return {\n        type: 'CURRENCY_CHOSEN',\n        currency,\n        symbol\n    }\n}\n\nexport function gettingFiatBalance(){\n    return {\n        type: 'GETTING_FIAT_BALANCE'\n    }\n}\n\nexport function fiatBalanceLoaded(balance){\n    return {\n        type: 'GOT_FIAT_BALANCE',\n        balance\n    }\n}\n\nexport function rampOpened(){\n    return {\n        type: 'RAMP_OPENED'\n    }\n}\n\nexport function rampSuccess(response){\n    return {\n        type: 'RAMP_SUCCESS',\n        response\n    }\n}\n\nexport function rampClosed(response){\n    return {\n        type: 'RAMP_CLOSED',\n        response\n    }\n}\n\nexport function rampFailed(response){\n    return {\n        type: 'RAMP_FAILED',\n        response\n    }\n}\n\nexport function resetRamp(){\n    return {\n        type: 'RAMP_RESET'\n    }\n}","import { topupFail, topupClose, topupSuccess, loadAccount } from \"./interactions\";\n\nexport const subscribeToRampEvents = (dispatch, ramp) => {\n    ramp.on('WIDGET_CLOSE_REQUEST_CONFIRMED', (event) => {\n        topupClose(dispatch, event);\n    });\n\n    ramp.on('PURCHASE_CREATED', (event) => {\n        console.log(\"purchase created\", event);\n        // event.payload.purchase\n    });\n\n    ramp.on('PURCHASE_SUCCESSFUL', (event) => {\n        topupSuccess(dispatch, event);\n    });\n\n    ramp.on('PURCHASE_FAILED', (event) => {\n        topupFail(dispatch, event);\n    });\n}\n\nexport const subscribeToAccountsChanging = async (dispatch, web3) => {\n    web3.currentProvider.on('accountsChanged', function (accounts) {\n        loadAccount(dispatch, web3);\n    });\n}","import {loggedIn, accountLoaded, balanceLoaded, loggingIn, coinGeckoLoaded, currencyChosen, gettingFiatBalance, fiatBalanceLoaded, rampOpened, rampFailed, rampSuccess, rampClosed, resetRamp, loginFailed} from \"./actions\";\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport {convertWeiToEth} from '../helpers';\nimport { subscribeToRampEvents, subscribeToAccountsChanging } from \"./subscriptions\";\nimport { getWeb3 } from \"../getWeb3\";\n\nconst CoinGecko = require('coingecko-api');\n\nexport const loadWeb3 = async (dispatch) => {\n    dispatch(loggingIn());\n    let web3 = null;\n    try{\n        web3 = await getWeb3();\n        dispatch(loggedIn(web3));\n        loadAccount(dispatch, web3);\n    }\n    catch(error) {\n        dispatch(loginFailed(error));\n    }\n    return web3;\n}\n\nexport const loadAccount = async (dispatch, web3) => {\n    const accounts = await web3.eth.getAccounts();\n    const account = accounts[0];\n    dispatch(accountLoaded(account));\n    subscribeToAccountsChanging(dispatch, web3);\n    loadBalance(dispatch, web3, account);\n    return account;\n}\n  \nexport const loadBalance = async (dispatch, web3, account) => {\n    const balance = await web3.eth.getBalance(account);\n    dispatch(balanceLoaded(balance));\n    loadCoinGecko(dispatch);\n    return balance;\n}\n\nexport const loadCoinGecko = async (dispatch) => {\n    const coinGecko = new CoinGecko();\n    dispatch(coinGeckoLoaded(coinGecko));\n    return coinGecko;\n}\n\nexport const choseCurrency = async (dispatch, currency, currencySymbol) => {\n    dispatch(currencyChosen(currency, currencySymbol));\n}\n\nexport const getFiatBalance = async (dispatch, web3, coinGecko, token, fiat, etherAmount) => {\n    dispatch(gettingFiatBalance())\n    let data = await coinGecko.simple.price({\n        ids: [token],\n        vs_currencies: [fiat],\n    });\n    console.log(data, token, fiat);\n    let totalFiatBalance = data.data[token][fiat] * convertWeiToEth(web3, etherAmount);\n    dispatch(fiatBalanceLoaded(totalFiatBalance));\n    return data;\n}\n\nexport const topupWallet = async (dispatch, account) => {\n    const ramp = new RampInstantSDK({\n        hostAppName: 'Easy Ether',\n        hostLogoUrl: 'https://alexroan.github.io/easy-ether/static/media/logo-white.86143c9b.png',\n        variant: 'auto',\n        userAddress: account\n    })\n    .show();\n    dispatch(rampOpened());\n    subscribeToRampEvents(dispatch, ramp);\n}\n\nexport const topupSuccess = async (dispatch, response) => {\n    console.log(\"Topup success\", response);\n    dispatch(rampSuccess(response));\n}\n\nexport const topupClose = async (dispatch, response) => {\n    console.log(\"Topup closed\", response);\n    dispatch(rampClosed(response));\n}\n\nexport const topupFail = async (dispatch, response) => {\n    console.log(\"Topup fail\", response);\n    dispatch(rampFailed(response));\n}\n\nexport const resetTopup = async (dispatch) => {\n    dispatch(resetRamp());\n}","import Web3 from 'web3';\n\nexport const getWeb3 = () =>\n\tnew Promise( async (resolve, reject) => {\n\t\t// Modern dapp browsers...\n\t\tif (window.ethereum) {\n\t\t\tconst web3 = new Web3(window.ethereum);\n\t\t\ttry {\n\t\t\t\t// Request account access if needed\n\t\t\t\tawait window.ethereum.enable();\n\t\t\t\t// Acccounts now exposed\n\t\t\t\tresolve(web3);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t}\n\t\t// Legacy dapp browsers...\n\t\telse if (window.web3) {\n\t\t\t// Use Mist/MetaMask's provider.\n\t\t\tconst web3 = window.web3;\n\t\t\tresolve(web3);\n\t\t}\n\t\t// Fallback to localhost; use dev console port by default...\n\t\telse {\n\t\t\treject(new Error(\"No web3 wallet available\"));\n\t\t}\n\t});","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport { accountSelector, topupOpenSelector, topupErrorSelector, topupSuccessSelector, topupResponseSelector } from './redux/selectors';\nimport { topupWallet } from './redux/interactions';\nimport FadeIn from 'react-fade-in';\n\n\nclass Account extends Component {\n\n    render() {\n        const {dispatch, account} = this.props;\n\n        const topup = () => {\n            topupWallet(dispatch, account);\n        }\n\n        return (\n            <FadeIn>\n                <Container>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <p>\n                                <span id=\"account-address\" className=\"text-truncate badge badge-pill text-white\">{account}</span>\n                            </p>\n                            <Button onClick={topup}>\n                                Topup\n                            </Button>\n                        </Col>\n                    </Row>\n                </Container>\n            </FadeIn>\n        );\n    }\n\n}\n\nfunction mapStateToProps(state){\n\treturn {\n        account: accountSelector(state),\n        topupOpen: topupOpenSelector(state),\n        topupError: topupErrorSelector(state),\n        topupSuccess: topupSuccessSelector(state),\n        topupResponse: topupResponseSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(Account);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Row, Col, Button, Alert} from 'react-bootstrap';\nimport { loadWeb3 } from './redux/interactions';\nimport FadeIn from 'react-fade-in';\nimport { loggingInErrorSelector, loggingInSelector } from './redux/selectors';\n\nclass Login extends Component {\n    \n    render() {\n\n        const {dispatch, loggingIn, loggingInError} = this.props;\n    \n        const login = async (e) => {\n          e.preventDefault();\n          await loadWeb3(dispatch);\n        }\n\n        return (\n\n            <FadeIn>\n                <Container>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <Button onClick={login}>\n                                Connect\n                            </Button>\n                            {loggingInError !== false && loggingIn === false ? <FadeIn><Alert className=\"my-2\" variant=\"danger\">Connect to wallet failure: {loggingInError.message}</Alert></FadeIn> : <></>}\n                        </Col>\n                    </Row>\n                </Container>\n            </FadeIn>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n\treturn {\n        loggingInError: loggingInErrorSelector(state),\n        loggingIn: loggingInSelector(state)\n\t}\n}\n\nexport default connect(mapStateToProps)(Login);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport './App.scss';\nimport { balanceSelector } from './redux/selectors';\nimport Account from './Account';\nimport Login from './Login';\nimport { Container, Row, Col, Image, Navbar } from 'react-bootstrap';\nimport {SocialIcon} from 'react-social-icons';\nimport FadeIn from 'react-fade-in';\nimport logo from './img/logo-white.png';\n\nclass App extends Component {\n\n\trender() {\n\n\t\tconst {loadedBalance} = this.props;\n\n\t\tlet appClassName = \"app h-100\";\n\t\tif (loadedBalance !== null) {\n\t\t\tappClassName += \" logged-in\";\n\t\t}\n\n\t\treturn (\n\t\t<div className={appClassName}>\n\t\t\t<Navbar fixed=\"top\">\n\t\t\t\t<FadeIn>\n\t\t\t\t\t<Navbar.Brand>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\twidth=\"35\"\n\t\t\t\t\t\t\theight=\"35\"\n\t\t\t\t\t\t\tclassName=\"d-inline-block align-top\"\n\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<span>Easy Ether</span>\n\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t</FadeIn>\n\t\t\t</Navbar>\n\t\t\t{ loadedBalance != null ? <Account /> : <Login /> }\n\t\t\t<footer>\n\t\t\t\t<Container>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col className=\"text-center pt-4 pb-2\">\n\t\t\t\t\t\t\t<FadeIn>\n\t\t\t\t\t\t\t\t<span><a href=\"https://alexroan.co.uk\">Alex Roan</a></span>\n\t\t\t\t\t\t\t</FadeIn>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<FadeIn>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col className=\"text-center pb-4\">\n\t\t\t\t\t\t\t\t<SocialIcon className=\"mx-1\" url=\"https://twitter.com/alexroan\" />\n\t\t\t\t\t\t\t\t<SocialIcon className=\"mx-1\" url=\"https://github.com/alexroan\" />\n\t\t\t\t\t\t\t\t<SocialIcon className=\"mx-1\" url=\"https://medium.com/@alexroan\" />\n\t\t\t\t\t\t\t\t<SocialIcon className=\"mx-1\" network=\"email\" url=\"mailto:alex.roan@hotmail.com\" />\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</FadeIn>\n\t\t\t\t</Container>\n\t\t\t</footer>\n\t\t</div>\n\t\t);\n\t}\n}\n\nfunction mapStateToProps(state){\n\treturn {\n\t\tloadedBalance: balanceSelector(state),\n\t}\n}\n\nexport default connect(mapStateToProps)(App);\n","import {combineReducers} from 'redux';\n\nfunction app(state = {}, action) {\n    switch (action.type) {\n        case 'COINGECKO_LOADED':\n            return { ...state, coinGecko: action.coinGecko } \n        case 'RAMP_LOADED':\n            return { ...state, ramp: action.ramp }\n        default:\n            return state;\n    }\n}\n\nfunction topup(state = {}, action) {\n    switch (action.type) {\n        case 'RAMP_OPENED':\n            return { ...state, active: true }\n        case 'RAMP_FAILED':\n            return { ...state, active: false, error: true, response: action.response }\n        case 'RAMP_CLOSED':\n            return { ...state, active: false, response: action.response }\n        case 'RAMP_SUCCESS':\n            return { ...state, active: false, success: true, response: action.response }\n        case 'RAMP_RESET':\n            return { ...state, active: false, error: false, success: false, response: null }\n        default:\n            return state;\n    }\n}\n\nfunction account(state = {}, action) {\n    switch (action.type) {\n        case 'LOGGING_IN':\n            return { ...state, loggingIn: true, error: false}\n        case 'LOGGED_IN':\n            return { ...state, loggingIn: false, web3: action.web3 }\n        case 'LOGIN_FAILED':\n            return { ...state, loggingIn: false, error: action.error}\n        case 'ACCOUNT_LOADED':\n            return { ...state, account: action.account }\n        case 'BALANCE_LOADED':\n            return { ...state, balance: action.balance }\n        case 'GETTING_FIAT_BALANCE':\n            return { ...state, loadingFiatBalance: true }\n        case 'GOT_FIAT_BALANCE':\n            return { ...state, loadingFiatBalance: false, fiatBalance: action.balance}\n        default:\n            return state;\n    }\n}\n\nfunction display(state = {}, action) {\n    switch (action.type) {\n        case 'CURRENCY_CHOSEN':\n            return { ...state, currency: action.currency, currencySymbol: action.symbol}\n        default:\n            return state;\n    }\n}\n\nconst rootReducer = new combineReducers({\n    app, account, display, topup\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport { createLogger }  from \"redux-logger\";\nimport rootReducer from \"./reducers\";\n\nconst loggerMiddleware = createLogger();\nconst middleware = [];\n\n//connects redux browser to app\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport default function configureStore(preLoadedState){\n    return createStore(\n        rootReducer, \n        preLoadedState,\n        composeEnhancers(applyMiddleware(...middleware, loggerMiddleware))\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from './redux/configure';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}